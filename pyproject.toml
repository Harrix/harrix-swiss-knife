[project]
name = "harrix-swiss-knife"
version = "0.2"
description = "Python + Node.js application for automating personal tasks in Windows"
readme = "README.md"
license = { file = "LICENSE.md" }
authors = [{ name = "Anton Sergienko", email = "anton.b.sergienko@gmail.com" }]
requires-python = ">=3.10"
dependencies = [
    "click>=8.2.1",
    "harrix-pylib>=0.152",
    "libcst>=1.5.1",
    "matplotlib>=3.10.3",
    "pandas>=2.3.0",
    "pillow>=11.1.0",
    "pillow-avif-plugin>=1.5.2",
    "pyside6>=6.8.1.1",
    "pythonnet>=3.0.5",
    "pyyaml>=6.0.2",
    "ruff>=0.9.2",
]

[project.scripts]
harrix-swiss-knife = "harrix_swiss_knife:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["isort>=5.13.2", "pytest>=8.3.4", "vermin>=1.6.0"]

# Disabling some pydocstyle rules that conflict with Markdown-style documentation.
# We use Markdown for docstrings instead of traditional reST/Napoleon/Google formats:
# D205 - 1 blank line required between summary line and description
# D412 - No blank lines allowed between a section header and its content ("{name}")
# D417 - Missing argument description in the docstring for {definition}: {name}
# Recommendations from Ruff itself:
# D203 - 1 blank line required before class docstring
# D213 - Multi-line docstring summary should start at the second line
# COM812 - Trailing comma missing
# Other rules:
# PLR0915 - Too many statements ({statements} > {max_statements})
# PLR0912 - Too many branches ({branches} > {max_branches})
# C901 - {name} is too complex ({complexity} > {max_complexity})
# S603 - subprocess call: check for execution of untrusted input
# T201 - print found
# ANN401 - Dynamically typed expressions (typing.Any) are disallowed in {name}
# S608 - Possible SQL injection vector through string-based query construction
# BLE001 - blind-except	Do not catch blind exception: {name}
# PERF203 - try-except within a loop incurs performance overhead
# PLR0913 - Too many arguments in function definition ({c_args} > {max_args})
[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "ANN401",
    "C901",
    "COM812",
    "D203",
    "D205",
    "D213",
    "D412",
    "D417",
    "PLR0912",
    "PLR0915",
    "S603",
    "S608",
    "T201",
    "BLE001",
    "PERF203",
    "PLR0913"
]
line-length = 120
exclude = [
    "src/harrix_swiss_knife/resources_rc.py",
    "src/harrix_swiss_knife/fitness/window.py",
]

# Disable specific checks in test files:
# S101 - Use of assert detected
# D103 (pydocstyle (D)) - Missing docstring in public function
# INP001 - File {filename} is part of an implicit namespace package. Add an __init__.py.
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D103", "INP001"]

[tool.pytest.ini_options]
addopts = "-m 'not slow'"

markers = ["slow: mark a test as slow."]
